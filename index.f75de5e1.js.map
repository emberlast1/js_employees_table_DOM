{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\nconst body = document.querySelector('body');\nlet sortOrder = 'asc';\nlet currentColumn = null;\n\nfunction addNewEmployee(eName, position, office, age, salary) {\n  const tBody = document.querySelector('tbody');\n  const rows = tBody.querySelectorAll('tr');\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `<td>${eName}</td>\n  <td>${position}</td>\n  <td>${office}</td>\n  <td>${age}</td>\n  <td>${salary}</td>`;\n\n  tBody.append(newRow);\n\n  newRow.addEventListener('click', () => {\n    rows.forEach((r) => {\n      r.classList.remove('active');\n    });\n\n    newRow.classList.add('active');\n  });\n\n  rows.forEach((row) => {\n    row.addEventListener('click', () => {\n      newRow.classList.remove('active');\n      row.classList.add('active');\n    });\n  });\n\n  editCell();\n}\n\nconst sortBy = (columnIndex) => {\n  const tBody = document.querySelector('tbody');\n  const rows = Array.from(tBody.rows);\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].textContent;\n    const cellB = rowB.cells[columnIndex].textContent;\n\n    if (currentColumn !== columnIndex) {\n      sortOrder = 'asc';\n    }\n\n    switch (columnIndex) {\n      case 0:\n        currentColumn = 0;\n\n        return sortOrder === 'asc'\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n      case 1:\n        currentColumn = 1;\n\n        return sortOrder === 'asc'\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n      case 2:\n        currentColumn = 2;\n\n        return sortOrder === 'asc'\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n      case 3:\n        currentColumn = 3;\n\n        return sortOrder === 'asc' ? +cellA - +cellB : +cellB - +cellA;\n      case 4:\n        currentColumn = 4;\n\n        return sortOrder === 'asc'\n          ? +cellA.slice(1).split(',').join('') -\n              +cellB.slice(1).split(',').join('')\n          : +cellB.slice(1).split(',').join('') -\n              +cellA.slice(1).split(',').join('');\n      default:\n        return 0;\n    }\n  });\n\n  rows.forEach((row) => tBody.appendChild(row));\n\n  sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n};\n\nconst pushNotification = (title, description, type) => {\n  const notafication = document.createElement('div');\n  const titleH2 = document.createElement('h2');\n  const descript = document.createElement('p');\n\n  notafication.setAttribute('data-qa', 'notification');\n  notafication.classList.add('notification', type);\n  descript.innerText = description;\n  titleH2.innerText = title;\n  titleH2.classList.add('title');\n\n  notafication.append(titleH2);\n  notafication.append(descript);\n\n  body.append(notafication);\n\n  setTimeout(() => (notafication.style.visibility = 'hidden'), 2000);\n};\n\nfunction validation(eName, age) {\n  let nameError = false;\n  let ageError = false;\n\n  if (eName.length < 4) {\n    nameError = true;\n\n    pushNotification(\n      'Name error',\n      'The name must be 4 or more characters long',\n      'error',\n    );\n  } else if (age < 18 || age > 90) {\n    ageError = true;\n\n    pushNotification('Age error', 'Age should be 18-90', 'error');\n  }\n\n  if (!nameError && !ageError) {\n    pushNotification('Success', 'New Employee Added Successfully', 'success');\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction saveChanges(cell, input) {\n  const newValue = input.value.trim();\n\n  if (newValue.length > 0) {\n    cell.textContent = newValue;\n  } else {\n    cell.textContent = input.defaultValue;\n  }\n}\n\nfunction editCell() {\n  const tBody = document.querySelector('tbody');\n  const cells = tBody.querySelectorAll('td');\n\n  cells.forEach((cell) => {\n    cell.addEventListener('dblclick', (e) => {\n      e.preventDefault();\n\n      const cellInput = document.createElement('input');\n      const inputValue = cell.textContent.trim();\n\n      cellInput.classList.add('cell-input');\n      cellInput.setAttribute('type', 'text');\n      cellInput.setAttribute('value', inputValue);\n\n      cell.innerHTML = '';\n      cell.appendChild(cellInput);\n\n      cellInput.focus();\n      cellInput.select();\n\n      cellInput.addEventListener('blur', () => {\n        saveChanges(cell, cellInput);\n      });\n\n      cellInput.addEventListener('keypress', (ev) => {\n        if (ev.key === 'Enter') {\n          saveChanges(cell, cellInput);\n        }\n      });\n    });\n  });\n}\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `<label>Name: <input name='name' type='text' data-qa='name' required></input></label>\n  <label>Position: <input name='position' type='text' data-qa='position' required></input></label>\n  <label>Ofice: <select name='office' data-qa='office' required>\n  <option value='Tokyo'>Tokyo</option>\n  <option value='Singapore'>Singapore</option>\n  <option value='London'>London</option>\n  <option value='New York'>New York</option>\n  <option value='Edinburgh'>Edinburgh</option>\n  <option value='San Francisco'>San Francisco</option>\n  </select></label>\n  <label>Age: <input name='age' type='number' data-qa='age' required></input></label>\n  <label>Salary: <input name='salary' type='number' data-qa='salary' required></input></label>\n  <button type=submit>Save to table</button>`;\n\nbody.appendChild(form);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const tBody = document.querySelector('tbody');\n  const tHead = document.querySelector('thead');\n  const headers = tHead.querySelectorAll('th');\n  const rows = tBody.querySelectorAll('tr');\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => sortBy(index));\n  });\n\n  rows.forEach((row) => {\n    row.addEventListener('click', () => {\n      rows.forEach((r) => r.classList.remove('active'));\n      row.classList.add('active');\n    });\n  });\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const nameInput = form.elements['name'].value;\n    const positionInput = form.elements['position'].value;\n    const officeInput = form.elements['office'].value;\n    const ageInput = form.elements['age'].value;\n    const salaryInput = +form.elements['salary'].value;\n    const normSalary = `$${salaryInput.toLocaleString('en-US')}`;\n\n    const validationCheck = validation(nameInput, ageInput);\n\n    if (validationCheck) {\n      addNewEmployee(\n        nameInput,\n        positionInput,\n        officeInput,\n        ageInput,\n        normSalary,\n      );\n\n      form.reset();\n    }\n  });\n\n  editCell();\n});\n\n\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}